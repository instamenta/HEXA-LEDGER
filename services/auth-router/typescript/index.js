"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.dot = void 0;
const express_1 = __importDefault(require("express"));
const cors_1 = __importDefault(require("cors"));
const morgan_1 = __importDefault(require("morgan"));
const compression_1 = __importDefault(require("compression"));
const cookie_parser_1 = __importDefault(require("cookie-parser"));
const dot_configurator_1 = __importDefault(require("dot_configurator"));
const vlogger_1 = require("@instamenta/vlogger");
const auth_controller_1 = __importDefault(require("./controller/auth-controller"));
const auth_routes_1 = __importDefault(require("./routes/auth-routes"));
const prom_client_1 = require("prom-client");
const error_middleware_1 = __importDefault(require("./middleware/error-middleware"));
const hexa_module_1 = require("./utility/hexa-module");
const grpc_client_1 = __importDefault(require("./client/grpc-client"));
const auth_client_1 = __importDefault(require("./client/auth-client"));
const token_tools_1 = __importDefault(require("./utility/token-tools"));
const path_1 = __importDefault(require("path"));
exports.dot = new dot_configurator_1.default(process.env);
(function initializeService() {
    const API = (0, express_1.default)();
    const vlogger = vlogger_1.VLogger.getInstance(exports.dot.GET('DEBUG_LEVEL', true));
    const tokenTools = token_tools_1.default.getInstance({ dot: exports.dot, vlogger });
    const grpcClient = grpc_client_1.default.getInstance(exports.dot).connectClient();
    const authClient = auth_client_1.default.getInstance(grpcClient);
    const authController = auth_controller_1.default.getInstance(vlogger, authClient);
    const authRouter = auth_routes_1.default.getInstance(authController).getRouter();
    (0, prom_client_1.collectDefaultMetrics)();
    API.use((0, cors_1.default)());
    API.use((0, compression_1.default)());
    API.use(express_1.default.json());
    API.use((0, cookie_parser_1.default)());
    API.use((0, morgan_1.default)('combined'));
    API.use(express_1.default.static(path_1.default.join(__dirname, '../public')));
    API.use(hexa_module_1.metricsMiddleware);
    API.get('/metrics', hexa_module_1.metricsEndpoint);
    API.use('/api', authRouter);
    API.get('/', (req, res) => res.sendFile(path_1.default.join(__dirname, '../public/index.html')));
    API.use(error_middleware_1.default);
    API.listen(+exports.dot.GET('ROUTER_PORT', 5085), () => console.log(`[${exports.dot.GET('SERVICE_NAME', 'Auth-Router-Service')}] is running on port: [${+exports.dot.GET('ROUTER_PORT', 5085)}]`));
    API.on('error', (error) => console.log('API ran into Error:', error));
})();
(0, hexa_module_1.processOn)(['unhandledRejection', 'uncaughtException']);
(0, hexa_module_1.processOnce)(['SIGTERM', 'SIGINT', 'SIGUSR2']);
