version: '3.8'
networks:
  redpanda_network:
    driver: bridge
services:
  # PROXY
  nginx-proxy:
    image: nginx:latest
    ports:
      - "88:88"
    command: [ nginx, '-g', 'daemon off;' ]
    volumes:
      - ./nginx-proxy/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - user-router
      - post-router
      - chat-router
    networks:
      - redpanda_network
  #      - php-chat-service

  chat-router:
    build:
      context: ./chat-router/.
      dockerfile: Dockerfile
    container_name: chat-router-api
    depends_on:
      - postgres-db
    ports:
      - "8080:80"
    networks:
      - redpanda_network

  postgres-db:
    image: postgres:latest
    container_name: postgres
    ports:
      - "5555:5432"  # Map host port 5555 to container port 5432
    environment:
      POSTGRES_DB: chatDB
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
    volumes:
      - ./chat-router/app/database/schema.sql:/docker-entrypoint-initdb.d/schema.sql
      - postgres-data:/var/lib/postgresql/data
    networks:
      - redpanda_network

  pgadmin4:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@gmail.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "2000:80"
    networks:
      - redpanda_network

  # SERVICES
  user-router:
    build:
      context: ./user-router/.
      dockerfile: Dockerfile
    container_name: user-router-api
    depends_on:
      - user-remote
    ports:
      - '5085:5085'
    env_file: ./user-router/.env
    environment:
      - ROUTER_PORT=5085
    volumes:
      - ./:/var/data
    networks:
      - redpanda_network

  post-router:
    build:
      context: ./post-router/.
      dockerfile: Dockerfile
    container_name: post-router-api
    depends_on:
      - post-remote
    ports:
      - '5095:5095'
    env_file: ./post-router/.env
    environment:
      - ROUTER_PORT=5095
    volumes:
      - ./:/var/data
    networks:
      - redpanda_network

  user-remote:
    build:
      context: ./user-remote/.
      dockerfile: Dockerfile
    container_name: user-remote-api
    ports:
      - '50051:50051'
    env_file: ./user-remote/.env
    environment:
      - GRPC_PORT=50051
    volumes:
      - ./:/var/data
    networks:
      - redpanda_network

  post-remote:
    build:
      context: ./post-remote/.
      dockerfile: Dockerfile
    container_name: post-remote-api
    ports:
      - '50052:50052'
    env_file: ./post-remote/.env
    environment:
      - GRPC_PORT=50052
    volumes:
      - ./:/var/data
    networks:
      - redpanda_network
  # MONITORING
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3003:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana-storage:/var/lib/grafana

  prometheus:
    image: prom/prometheus:latest
    command:
      - '--storage.tsdb.retention=6h'
      - '--storage.tsdb.path=/prometheus'
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9099:9090"
    volumes:
      - prometheus-config:/etc/prometheus
      - prometheus-storage:/prometheus

volumes:
  grafana-storage:
  prometheus-config:
  prometheus-storage:
  postgres-data: